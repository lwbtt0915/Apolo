<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="poolName" value="springHikariCP" />
		<property name="connectionTestQuery" value="SELECT 1 FROM DUAL" />
		<property name="dataSourceClassName" value="${jdbc.ds.cls.name}" />
		<property name="dataSourceProperties">
			<props>
				<prop key="url">${jdbc.url}</prop>
				<prop key="user">${jdbc.usr}</prop>
				<prop key="password">${jdbc.pwd}</prop>
			</props>
		</property>
		<property name="autoCommit"><value>false</value></property>
		<property name="connectionTimeout"><value>${jdbc.pool.connectionTimeout}</value></property>
		<property name="maxLifetime"><value>${jdbc.pool.maxLifetime}</value></property>
		<property name="idleTimeout"><value>${jdbc.pool.idleTimeout}</value></property>
		<property name="maximumPoolSize"><value>${jdbc.pool.maximumPoolSize}</value></property>
	</bean>

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>

	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
	    <property name="basePackage" value="cec.jiutian.mes.core.*.dao" />
	    <property name="markerInterface" value="cec.jiutian.mes.core.comn.dao.BaseMapper" />
	    <property name="properties">
	        <value>
	            ORDER = AFTER
	        </value>
	    </property>
	</bean>
	
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="txManager"/>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="do*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>

	<!-- <aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* cec.jiutian.mes.core.*.service.*.*(..))" />
	</aop:config> -->

</beans>